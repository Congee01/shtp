<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shtp.mapperservice.ProductMapper">
    <resultMap id="BaseResultMap" type="com.shtp.po.Product">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="intro" jdbcType="VARCHAR" property="intro" />
        <result column="picture" jdbcType="VARCHAR" property="picture" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="delete_time" jdbcType="TIMESTAMP" property="deleteTime" />
        <result column="cost" jdbcType="INTEGER" property="cost" />
        <result column="manager_id" jdbcType="INTEGER" property="managerId" />
        <result column="manager_name" jdbcType="VARCHAR" property="managerName" />
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from product
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.shtp.po.Product" useGeneratedKeys="true" keyProperty="id">
        insert into product (id, name,
                            intro, picture,
                            create_time, delete_time, cost,
                            manager_id, manager_name)
        values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
                #{intro,jdbcType=VARCHAR}, #{picture,jdbcType=VARCHAR},
                #{createTime,jdbcType=TIMESTAMP}, #{deleteTime,jdbcType=TIMESTAMP}, #{cost,jdbcType=INTEGER},
                #{managerId,jdbcType=INTEGER}, #{managerName,jdbcType=VARCHAR})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.shtp.po.Product">
        update product
        set name = #{name,jdbcType=VARCHAR},
            intro = #{intro,jdbcType=VARCHAR},
            picture = #{picture,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            delete_time = #{deleteTime,jdbcType=TIMESTAMP},
            cost = #{cost,jdbcType=INTEGER},
            manager_id = #{managerId,jdbcType=INTEGER},
            manager_name = #{managerName,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select id, name, intro, picture, create_time, delete_time, cost, manager_id,
               manager_name
        from product
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select id, name, intro, picture, create_time, delete_time, cost, manager_id, manager_name
        from product
    </select>
    <select id="queryAll" parameterType="java.lang.String" resultMap="BaseResultMap">
        select id, name,  intro, picture,  create_time, delete_time, cost, manager_id, manager_name
        from product
        <where>
            <if test="name!=null and name!=''">
                or name like concat('%',#{key},'%')
            </if>
            <if test="intro!=null and type!=''">
                or intro like concat('%',#{key},'%')
            </if>
        </where>
        order by create_time asc
    </select>
    <select id="selectByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select p.id, name,  intro, picture, create_time, delete_time, cost,manager_id, manager_name
        from product p
        where exists (
                      select o.id from product_order o where o.product_id = p.id and o.user_id = #{userId}
                  )
    </select>
    <select id="selectByManagerId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select p.id, name, intro, picture, create_time, delete_time, cost, manager_id, manager_name
        from product p
        where manager_id = #{userId}
    </select>
</mapper>